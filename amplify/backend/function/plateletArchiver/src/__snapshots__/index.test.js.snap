// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plateletArchiver archive some tasks, ignore the newer task 1`] = `
[MockFunction] {
  "calls": [
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "COMPLETED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "REJECTED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "ABANDONED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "CANCELLED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": "tasktoken",
          "status": {
            "eq": "COMPLETED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateLocationMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someLocationIdUnlisted",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskAssignees(
        $id: ID!,
        $nextToken: String
    ) {
        getTask(id: $id) {
            id
            assignees(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": null,
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskAssignees(
        $id: ID!,
        $nextToken: String
    ) {
        getTask(id: $id) {
            id
            assignees(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": "asstoken",
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateTaskAssigneeMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someAssignmentId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateTaskAssigneeMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someAssignmentId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskDeliverables($id: ID!, $nextToken: String) {
        getTask(id: $id) {
            id
            deliverables(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": null,
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskDeliverables($id: ID!, $nextToken: String) {
        getTask(id: $id) {
            id
            deliverables(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": "deltoken",
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateDeliverableMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someDeliverableId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateDeliverableMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someDeliverableId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskComments($id: ID!, $nextToken: String) {
        getTask(id: $id) {
            id
            comments(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": null,
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskComments($id: ID!, $nextToken: String) {
        getTask(id: $id) {
            id
            comments(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": "comtoken",
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateCommentMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someCommentId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateCommentMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someCommentId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateTaskMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someTaskId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`plateletArchiver failure to archive an assignee 1`] = `
[MockFunction] {
  "calls": [
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "COMPLETED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "REJECTED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "ABANDONED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "CANCELLED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": "tasktoken",
          "status": {
            "eq": "COMPLETED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateLocationMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someLocationIdUnlisted",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskAssignees(
        $id: ID!,
        $nextToken: String
    ) {
        getTask(id: $id) {
            id
            assignees(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": null,
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateTaskAssigneeMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someAssignmentId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`plateletArchiver graphql failure to archive an assignee 1`] = `
[MockFunction] {
  "calls": [
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "COMPLETED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "REJECTED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "ABANDONED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": null,
          "status": {
            "eq": "CANCELLED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query LIST_TASKS_BY_ARCHIVE_STATUS(
        $archived: Int!
        $status: ModelStringKeyConditionInput
        $nextToken: String
    ) {
        tasksByArchivedStatus(
            archived: $archived
            status: $status
            nextToken: $nextToken
        ) {
            items {
                id
                createdAt
                establishmentLocation {
                    id
                    listed
                    _version
                }
                pickUpLocation {
                    id
                    listed
                    _version
                }
                dropOffLocation {
                    id
                    listed
                    _version
                }
                _version
            }
            nextToken
        }
    }
",
        "variables": {
          "archived": 0,
          "nextToken": "tasktoken",
          "status": {
            "eq": "COMPLETED",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateLocationMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someLocationIdUnlisted",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "
    query GetTaskAssignees(
        $id: ID!,
        $nextToken: String
    ) {
        getTask(id: $id) {
            id
            assignees(nextToken: $nextToken) {
                items {
                    id
                    _version
                }
                nextToken
            };
        };
    };
",
        "variables": {
          "id": "someTaskId",
          "nextToken": null,
        },
      },
      "https://api.example.com/graphql",
    ],
    [
      {
        "query": "updateTaskAssigneeMutation",
        "variables": {
          "input": {
            "_version": 1,
            "archived": 1,
            "id": "someAssignmentId",
          },
        },
      },
      "https://api.example.com/graphql",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;
